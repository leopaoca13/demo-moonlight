/*!-----------------------------------------------------------------
    Name: Fliqs - Online Video Streaming HTML Template
    Version: 1.0.0
    Author: nK
    Website: https://nkdev.info/
    Purchase: https://themeforest.net/user/_nk/portfolio
    Support: https://nk.ticksy.com/
    License: You must have a valid license purchased only from ThemeForest (the above link) in order to legally use the theme for your project.
    Copyright 2023.
-------------------------------------------------------------------*/
    /*!-----------------------------------------------------------------
    Name: Fliqs - Online Video Streaming HTML Template
    Version: 1.0.0
    Author: nK
    Website: https://nkdev.info/
    Purchase: https://themeforest.net/user/_nk/portfolio
    Support: https://nk.ticksy.com/
    License: You must have a valid license purchased only from ThemeForest (the above link) in order to legally use the theme for your project.
    Copyright 2023.
-------------------------------------------------------------------*/
    /******/ (function() { // webpackBootstrap
var __webpack_exports__ = {};
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

window.game = '';
window.server = '';
window.launcher = '';

var delay = function delay(ms) {
  return new Promise(function (res) {
    return setTimeout(res, ms);
  });
};

window.parteCriar = function () {
  document.getElementsByClassName("flq-preloader")[0].classList.remove("flq-preloader-hide");
  setTimeout(function () {
    document.getElementsByClassName("content-wrap")[0].innerHTML = "";
    document.getElementsByClassName("flq-swiper-wrapper")[0].innerHTML = "";
    document.querySelector(".loader").classList.remove("loader-hide");
    document.querySelector(".status_text").classList.remove("status_text-hide");
    document.getElementsByClassName("flq-preloader")[0].classList.add("flq-preloader-hide");
  }, 1500);
};

document.addEventListener("DOMContentLoaded", function () {
  if (document.cookie.indexOf('token=') == -1) {
    document.getElementById("user-logo").style.display = 'none';
    window.loggedin = false;
  } else {
    window.loggedin = true;
    document.getElementById("botao-entrar").classList.remove("d-md-flex");
    document.getElementById("botao-entrar").style.display = 'none';
  }
});

window.logar = function () {
  var login = $(".form-do-login1")[0].value;
  var senha = $(".form-do-login2")[0].value;
  var log_btn = $("#botn-logar")[0];
  var xhr = new XMLHttpRequest();
  var url = "     /auth/login";
  xhr.open("POST", url, true);
  xhr.setRequestHeader("Content-Type", "application/json");

  xhr.onreadystatechange = function () {
    var json = JSON.parse(xhr.responseText);

    if (xhr.status === 200) {
      if (json.success != true) {
        log_btn.disabled = false;
        $(".form-do-login1")[0].style.borderColor = 'red';
        return $(".form-do-login2")[0].style.borderColor = 'red'; //err_obj.innerHTML=`\n                    Error: Usuário não existe/Sem assinatura válida\n                `
        //return err_obj.classList.remove("error--hidden")
      }

      window.location.href = "/painel";
    } else {
      log_btn.disabled = false;
      $(".form-do-login1")[0].style.borderColor = 'red';
      return $(".form-do-login2")[0].style.borderColor = 'red';
    }
  };

  var data = JSON.stringify({
    "username": login,
    "password": senha
  });
  xhr.send(data);
  console.log(login, senha);
};

window.checkAll = function () {
  if (!loggedin) {
    window.location.href = '/';
  }
};

var socket = io.connect();
socket.on('connect', function (msg) {
  console.log("Conectado ao Servidor");
});
socket.on("del", function (msg) {
  if (msg != true) {
    document.cookie = 'token=; max-age=0;';
    window.location.href = '/';
  }
});
socket.on('criado', function (msg) {
  myNode.innerHTML = '';
  document.querySelector(".infoVM").classList.remove("infoVM--hidden");
  document.getElementById("main-header").innerHTML = '';
  document.getElementById("ip-add").value = msg.ip;
  document.getElementById("pass").value = msg.password;
});
socket.on("reconnect", function (msg) {
  if (msg != "NADA") {
    myNode.innerHTML = '';
    document.querySelector(".loader").classList.remove("loader--hidden");
    document.getElementById("status_text").innerHTML = msg;
  }
});
socket.on("private", function (msg) {
  window.location.href = "/painel";
  console.log(socket);
});
socket.on("cookie", function (msg) {
  console.log("Cookie> ", msg);
  document.cookie = "info=".concat(msg, ";");
});
socket.on("error", function (msg) {
  if (msg.code == 2828) {
    alert("Inicie outro jogo/tente mais tarde.");
  }

  window.location.href = "/";
});
socket.on("fisica2", function (msg) {
  document.getElementById("status_text").innerHTML = "Carregando sua VM F\xEDsica...";
  socket.emit("vmCommand", {
    "event": "CreateVM"
  });
});
socket.on("fila", function (msg) {
  document.getElementById("status_text").innerHTML = "Posi\xE7\xE3o na fila: ".concat(msg.position);
  setTimeout(1500);
  socket.emit("vmCommand", {
    "event": "List"
  });
});
socket.on("fisica2-error", /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(msg) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            alert(msg);
            window.location.href = '/';

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
socket.on("RecCreated", /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(msg) {
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            parteCriar();
            setTimeout(function () {
              if (msg.fisica) {
                $("#formdasenha-fisica")[0].value = msg.password;
                $("#formdoip-fisica")[0].value = msg.ip;
                $("#entrar-vm-fisica").trigger("click");
                document.querySelector(".loader").classList.add("loader-hide");
                document.querySelector(".status_text").classList.add("status_text-hide");
              } else {
                $("#formdoip")[0].value = msg.ip;
                document.querySelector(".loader").classList.add("loader-hide");
                document.querySelector(".status_text").classList.add("status_text-hide");
              }
            }, 2000);

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function (_x2) {
    return _ref2.apply(this, arguments);
  };
}());
socket.on("created", /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(msg) {
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (msg.fisica) {
              $("#formdasenha-fisica")[0].value = msg.password;
              $("#formdoip-fisica")[0].value = msg.ip;
              $("#entrar-vm-fisica").trigger("click");
              document.querySelector(".loader").classList.add("loader-hide");
              document.querySelector(".status_text").classList.add("status_text-hide");
            } else {
              $("#formdoip")[0].value = msg.ip;
              document.querySelector(".loader").classList.add("loader-hide");
              document.querySelector(".status_text").classList.add("status_text-hide");
            }

          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function (_x3) {
    return _ref3.apply(this, arguments);
  };
}());
socket.on("changePage", /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(msg) {
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function (_x4) {
    return _ref4.apply(this, arguments);
  };
}());
var vm = '';

function changePage() {
  var t = game;

  if (game == "gtav") {
    t = "gtav-".concat(launcher);
  }

  if (game == "rleague") {
    t = "rleague-".concat(launcher);
  }

  var vmType = document.querySelector('input[name="machine-type"]:checked').id;
  parteCriar();
  tryLaunch(t, vmType);
}

function checarAssinatura() {
  socket.emit("checarAssinatura", '');
  parteCriar();
  document.getElementById("status_text").innerHTML = "Checando assinatura...";
  /*document.getElementsByTagName('body')[0].style.background = ""
  document.getElementsByTagName('body')[0].style.backgroundImage = "url('https://play.brightcloudgames.com.br/images/vip_loading21.jpg')";
  document.getElementsByTagName('body')[0].style.backgroundSize = "cover"
  document.getElementsByTagName('body')[0].style.backgroundRepeat = "no-repeat"*/

  socket.on("assinatura", /*#__PURE__*/function () {
    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(msg) {
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (msg == true) {
                fisicaLaunch();
              } else {
                window.location.href = '/';
              }

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function (_x5) {
      return _ref5.apply(this, arguments);
    };
  }());
}

function fisicaLaunch() {
  document.getElementsByClassName("btn btn-hover")[1].classList.remove("btn-hover--hidden"); //document.querySelector(".loader").classList.remove("loader--hidden")

  socket.emit("choose", "fisica");
  socket.emit("vmCommand", {
    "event": "List"
  });
  document.getElementById("status_text").innerHTML = "Carregando sua VM F\xEDsica..."; // document.querySelector(".iframe").classList.remove("iframe--hidden")
}

function tryLaunch(game, vmType) {
  if (vmType == "google") {
    socket.emit("choose", "google");
    socket.on("vms", /*#__PURE__*/function () {
      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(msg) {
        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                console.log(msg[0]);
                socket.emit("vmCommand", {
                  "event": "CreateVM",
                  "game": game
                });

              case 2:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      return function (_x6) {
        return _ref6.apply(this, arguments);
      };
    }());
    socket.on("status", /*#__PURE__*/function () {
      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(msg) {
        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                document.getElementById("status_text").innerHTML = msg;

              case 1:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      return function (_x7) {
        return _ref7.apply(this, arguments);
      };
    }());
    socket.on("error", /*#__PURE__*/function () {
      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(msg) {
        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                console.log("ERROR");
                window.location.href = "/";

              case 2:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      return function (_x8) {
        return _ref8.apply(this, arguments);
      };
    }());
    socket.emit("vmCommand", {
      "event": "List"
    });
  } else if (vmType == "azure") {
    socket.emit("choose", "azure");
    socket.on("vms", /*#__PURE__*/function () {
      var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(msg) {
        return regeneratorRuntime.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                console.log(msg[0]);
                socket.emit("vmCommand", {
                  "event": "CreateVM",
                  "game": game
                });

              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));

      return function (_x9) {
        return _ref9.apply(this, arguments);
      };
    }());
    socket.on("status", /*#__PURE__*/function () {
      var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(msg) {
        return regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                document.getElementById("status_text").innerHTML = msg;

              case 1:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));

      return function (_x10) {
        return _ref10.apply(this, arguments);
      };
    }());
    socket.on("error", /*#__PURE__*/function () {
      var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(msg) {
        return regeneratorRuntime.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                console.log("ERROR");
                window.location.href = "/";

              case 2:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));

      return function (_x11) {
        return _ref11.apply(this, arguments);
      };
    }());
    socket.emit("vmCommand", {
      "event": "List"
    });
  }
}
/******/ })()
;
//# sourceMappingURL=play.min.js.map
